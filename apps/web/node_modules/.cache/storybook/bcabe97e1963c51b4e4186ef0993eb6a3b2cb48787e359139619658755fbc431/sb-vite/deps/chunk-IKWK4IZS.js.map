{
  "version": 3,
  "sources": ["../../../../../../../../node_modules/next/src/client/set-attributes-from-props.ts"],
  "sourcesContent": ["const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule',\n}\n\nconst ignoreProps = [\n  'onLoad',\n  'onReady',\n  'dangerouslySetInnerHTML',\n  'children',\n  'onError',\n  'strategy',\n  'stylesheets',\n]\n\nfunction isBooleanScriptAttribute(\n  attr: string\n): attr is 'async' | 'defer' | 'noModule' {\n  return ['async', 'defer', 'noModule'].includes(attr)\n}\n\nexport function setAttributesFromProps(el: HTMLElement, props: object) {\n  for (const [p, value] of Object.entries(props)) {\n    if (!props.hasOwnProperty(p)) continue\n    if (ignoreProps.includes(p)) continue\n\n    // we don't render undefined props to the DOM\n    if (value === undefined) {\n      continue\n    }\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n\n    if (el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr)) {\n      // Correctly assign boolean script attributes\n      // https://github.com/vercel/next.js/pull/20748\n      ;(el as HTMLScriptElement)[attr] = !!value\n    } else {\n      el.setAttribute(attr, String(value))\n    }\n\n    // Remove falsy non-zero boolean attributes so they are correctly interpreted\n    // (e.g. if we set them to false, this coerces to the string \"false\", which the browser interprets as true)\n    if (\n      value === false ||\n      (el.tagName === 'SCRIPT' &&\n        isBooleanScriptAttribute(attr) &&\n        (!value || value === 'false'))\n    ) {\n      // Call setAttribute before, as we need to set and unset the attribute to override force async:\n      // https://html.spec.whatwg.org/multipage/scripting.html#script-force-async\n      el.setAttribute(attr, '')\n      el.removeAttribute(attr)\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;mCAwBgBA,0BAAAA;;;eAAAA;;;AAxBhB,QAAMC,oBAA4C;MAChDC,eAAe;MACfC,WAAW;MACXC,SAAS;MACTC,WAAW;MACXC,UAAU;IACZ;AAEA,QAAMC,cAAc;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;;AAGF,aAASC,yBACPC,MAAY;AAEZ,aAAO;QAAC;QAAS;QAAS;QAAYC,SAASD,IAAAA;IACjD;AAEO,aAAST,uBAAuBW,IAAiBC,OAAa;AACnE,iBAAW,CAACC,GAAGC,KAAAA,KAAUC,OAAOC,QAAQJ,KAAAA,GAAQ;AAC9C,YAAI,CAACA,MAAMK,eAAeJ,CAAAA,EAAI;AAC9B,YAAIN,YAAYG,SAASG,CAAAA,EAAI;AAG7B,YAAIC,UAAUI,QAAW;AACvB;QACF;AAEA,cAAMT,OAAOR,kBAAkBY,CAAAA,KAAMA,EAAEM,YAAW;AAElD,YAAIR,GAAGS,YAAY,YAAYZ,yBAAyBC,IAAAA,GAAO;;AAG3DE,aAAyBF,IAAAA,IAAQ,CAAC,CAACK;QACvC,OAAO;AACLH,aAAGU,aAAaZ,MAAMa,OAAOR,KAAAA,CAAAA;QAC/B;AAIA,YACEA,UAAU,SACTH,GAAGS,YAAY,YACdZ,yBAAyBC,IAAAA,MACxB,CAACK,SAASA,UAAU,UACvB;AAGAH,aAAGU,aAAaZ,MAAM,EAAA;AACtBE,aAAGY,gBAAgBd,IAAAA;QACrB;MACF;IACF;;;;;;;;",
  "names": ["setAttributesFromProps", "DOMAttributeNames", "acceptCharset", "className", "htmlFor", "httpEquiv", "noModule", "ignoreProps", "isBooleanScriptAttribute", "attr", "includes", "el", "props", "p", "value", "Object", "entries", "hasOwnProperty", "undefined", "toLowerCase", "tagName", "setAttribute", "String", "removeAttribute"]
}
